/**
 * HelloAsso API
 * HelloAsso auto-generated SDK
 *
 * The version of the OpenAPI document: public
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HelloAssoApiV5ModelsAccountsClientsPublicPutApiClientRequest from '../model/HelloAssoApiV5ModelsAccountsClientsPublicPutApiClientRequest';
import HelloAssoApiV5ModelsApiNotificationsApiNotificationType from '../model/HelloAssoApiV5ModelsApiNotificationsApiNotificationType';
import HelloAssoApiV5ModelsApiNotificationsApiUrlNotificationModel from '../model/HelloAssoApiV5ModelsApiNotificationsApiUrlNotificationModel';
import HelloAssoApiV5ModelsApiNotificationsPostApiUrlNotificationBody from '../model/HelloAssoApiV5ModelsApiNotificationsPostApiUrlNotificationBody';
import HelloAssoApiV5ModelsPartnersPartnerPublicModel from '../model/HelloAssoApiV5ModelsPartnersPartnerPublicModel';
import ResultsWithPaginationModelPartnerOrganizationModel from '../model/ResultsWithPaginationModelPartnerOrganizationModel';

/**
* Partenaires service.
* @module api/PartenairesApi
* @version public
*/
export default class PartenairesApi {

    /**
    * Constructs a new PartenairesApi. 
    * @alias module:api/PartenairesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the partnersMeApiClientsPut operation.
     * @callback module:api/PartenairesApi~partnersMeApiClientsPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Mise à jour du domaine
     * <br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>
     * @param {Object} opts Optional parameters
     * @param {module:model/HelloAssoApiV5ModelsAccountsClientsPublicPutApiClientRequest} [helloAssoApiV5ModelsAccountsClientsPublicPutApiClientRequest] 
     * @param {module:api/PartenairesApi~partnersMeApiClientsPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    partnersMeApiClientsPut(opts, callback) {
      opts = opts || {};
      let postBody = opts['helloAssoApiV5ModelsAccountsClientsPublicPutApiClientRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/partners/me/api-clients', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the partnersMeApiNotificationsDelete operation.
     * @callback module:api/PartenairesApi~partnersMeApiNotificationsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Suppression de l'URL de notification principale
     * <br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>
     * @param {Object} opts Optional parameters
     * @param {module:model/HelloAssoApiV5ModelsApiNotificationsApiNotificationType} [notificationType] Do not specify a notification type to remove the main notification Url
     * @param {module:api/PartenairesApi~partnersMeApiNotificationsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    partnersMeApiNotificationsDelete(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'notificationType': opts['notificationType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/partners/me/api-notifications', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the partnersMeApiNotificationsOrganizationsOrganizationSlugDelete operation.
     * @callback module:api/PartenairesApi~partnersMeApiNotificationsOrganizationsOrganizationSlugDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Suppression d'une URL de notification liée à une organisation
     * <br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>
     * @param {String} organizationSlug 
     * @param {Object} opts Optional parameters
     * @param {module:model/HelloAssoApiV5ModelsApiNotificationsApiNotificationType} [notificationType] Do not specify a notification type to remove the main notification Url
     * @param {module:api/PartenairesApi~partnersMeApiNotificationsOrganizationsOrganizationSlugDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    partnersMeApiNotificationsOrganizationsOrganizationSlugDelete(organizationSlug, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationSlug' is set
      if (organizationSlug === undefined || organizationSlug === null) {
        throw new Error("Missing the required parameter 'organizationSlug' when calling partnersMeApiNotificationsOrganizationsOrganizationSlugDelete");
      }

      let pathParams = {
        'organizationSlug': organizationSlug
      };
      let queryParams = {
        'notificationType': opts['notificationType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/partners/me/api-notifications/organizations/{organizationSlug}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the partnersMeApiNotificationsOrganizationsOrganizationSlugPut operation.
     * @callback module:api/PartenairesApi~partnersMeApiNotificationsOrganizationsOrganizationSlugPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HelloAssoApiV5ModelsApiNotificationsApiUrlNotificationModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Mise à jour d'une URL de notification liée à une organisation
     * <br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>
     * @param {String} organizationSlug 
     * @param {Object} opts Optional parameters
     * @param {module:model/HelloAssoApiV5ModelsApiNotificationsPostApiUrlNotificationBody} [helloAssoApiV5ModelsApiNotificationsPostApiUrlNotificationBody] The body of the request, do not specify a notification type to update the main notification Url
     * @param {module:api/PartenairesApi~partnersMeApiNotificationsOrganizationsOrganizationSlugPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HelloAssoApiV5ModelsApiNotificationsApiUrlNotificationModel}
     */
    partnersMeApiNotificationsOrganizationsOrganizationSlugPut(organizationSlug, opts, callback) {
      opts = opts || {};
      let postBody = opts['helloAssoApiV5ModelsApiNotificationsPostApiUrlNotificationBody'];
      // verify the required parameter 'organizationSlug' is set
      if (organizationSlug === undefined || organizationSlug === null) {
        throw new Error("Missing the required parameter 'organizationSlug' when calling partnersMeApiNotificationsOrganizationsOrganizationSlugPut");
      }

      let pathParams = {
        'organizationSlug': organizationSlug
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = HelloAssoApiV5ModelsApiNotificationsApiUrlNotificationModel;
      return this.apiClient.callApi(
        '/partners/me/api-notifications/organizations/{organizationSlug}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the partnersMeApiNotificationsPut operation.
     * @callback module:api/PartenairesApi~partnersMeApiNotificationsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HelloAssoApiV5ModelsApiNotificationsApiUrlNotificationModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Mise à jour de l'URL de notification principale
     * <br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>
     * @param {Object} opts Optional parameters
     * @param {module:model/HelloAssoApiV5ModelsApiNotificationsPostApiUrlNotificationBody} [helloAssoApiV5ModelsApiNotificationsPostApiUrlNotificationBody] The body of the request, do not specify a notification type to update the main notification Url
     * @param {module:api/PartenairesApi~partnersMeApiNotificationsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HelloAssoApiV5ModelsApiNotificationsApiUrlNotificationModel}
     */
    partnersMeApiNotificationsPut(opts, callback) {
      opts = opts || {};
      let postBody = opts['helloAssoApiV5ModelsApiNotificationsPostApiUrlNotificationBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = HelloAssoApiV5ModelsApiNotificationsApiUrlNotificationModel;
      return this.apiClient.callApi(
        '/partners/me/api-notifications', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the partnersMeGet operation.
     * @callback module:api/PartenairesApi~partnersMeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HelloAssoApiV5ModelsPartnersPartnerPublicModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Récupération des informations
     * <br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>
     * @param {module:api/PartenairesApi~partnersMeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HelloAssoApiV5ModelsPartnersPartnerPublicModel}
     */
    partnersMeGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = HelloAssoApiV5ModelsPartnersPartnerPublicModel;
      return this.apiClient.callApi(
        '/partners/me', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the partnersMeOrganizationsGet operation.
     * @callback module:api/PartenairesApi~partnersMeOrganizationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResultsWithPaginationModelPartnerOrganizationModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtenir toutes les organisations
     * Liste toutes les organisations liées au partenaire. Les résultats sont classés par date de mise à jour de la visibilité API en ordre croissant. Le nombre total de résultats (ou de pages) n'est pas récupérable, donc les informations de pagination retournées indiqueront toujours -1.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize = 20)] The number of items per page
     * @param {String} [continuationToken] Continuation Token from which we wish to retrieve results
     * @param {module:api/PartenairesApi~partnersMeOrganizationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResultsWithPaginationModelPartnerOrganizationModel}
     */
    partnersMeOrganizationsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'continuationToken': opts['continuationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ResultsWithPaginationModelPartnerOrganizationModel;
      return this.apiClient.callApi(
        '/partners/me/organizations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
