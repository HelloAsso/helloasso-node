/**
 * HelloAsso API
 * HelloAsso auto-generated SDK
 *
 * The version of the OpenAPI document: public
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HelloAssoApiV5ModelsEnumsFormType from '../model/HelloAssoApiV5ModelsEnumsFormType';
import HelloAssoApiV5ModelsEnumsItemState from '../model/HelloAssoApiV5ModelsEnumsItemState';
import HelloAssoApiV5ModelsEnumsSortField from '../model/HelloAssoApiV5ModelsEnumsSortField';
import HelloAssoApiV5ModelsEnumsSortOrder from '../model/HelloAssoApiV5ModelsEnumsSortOrder';
import HelloAssoApiV5ModelsEnumsTierType from '../model/HelloAssoApiV5ModelsEnumsTierType';
import HelloAssoApiV5ModelsStatisticsItemDetail from '../model/HelloAssoApiV5ModelsStatisticsItemDetail';
import HelloAssoApiV5ModelsStatisticsOrderDetail from '../model/HelloAssoApiV5ModelsStatisticsOrderDetail';
import ResultsWithPaginationModelOrder from '../model/ResultsWithPaginationModelOrder';

/**
* Commandes service.
* @module api/CommandesApi
* @version public
*/
export default class CommandesApi {

    /**
    * Constructs a new CommandesApi. 
    * @alias module:api/CommandesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the itemsItemIdGet operation.
     * @callback module:api/CommandesApi~itemsItemIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HelloAssoApiV5ModelsStatisticsItemDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtenir le détail d'un article contenu dans une commande
     * <br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>
     * @param {Number} itemId The item ID
     * @param {Object} opts Optional parameters
     * @param {Boolean} [withDetails = false)] Set to true to return CustomFields and Options
     * @param {module:api/CommandesApi~itemsItemIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HelloAssoApiV5ModelsStatisticsItemDetail}
     */
    itemsItemIdGet(itemId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling itemsItemIdGet");
      }

      let pathParams = {
        'itemId': itemId
      };
      let queryParams = {
        'withDetails': opts['withDetails']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = HelloAssoApiV5ModelsStatisticsItemDetail;
      return this.apiClient.callApi(
        '/items/{itemId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ordersOrderIdCancelPost operation.
     * @callback module:api/CommandesApi~ordersOrderIdCancelPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Annuler les paiements futurs pour une commande (pas de remboursement).
     * <br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/>FormAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> RefundManagement<br/><br/>
     * @param {Number} orderId The order identifier.
     * @param {module:api/CommandesApi~ordersOrderIdCancelPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    ordersOrderIdCancelPost(orderId, callback) {
      let postBody = null;
      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling ordersOrderIdCancelPost");
      }

      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/orders/{orderId}/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ordersOrderIdGet operation.
     * @callback module:api/CommandesApi~ordersOrderIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HelloAssoApiV5ModelsStatisticsOrderDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtenir des informations détaillées sur une commande
     * <br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>
     * @param {Number} orderId 
     * @param {module:api/CommandesApi~ordersOrderIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HelloAssoApiV5ModelsStatisticsOrderDetail}
     */
    ordersOrderIdGet(orderId, callback) {
      let postBody = null;
      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling ordersOrderIdGet");
      }

      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = HelloAssoApiV5ModelsStatisticsOrderDetail;
      return this.apiClient.callApi(
        '/orders/{orderId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the organizationsOrganizationSlugFormsFormTypeFormSlugItemsGet operation.
     * @callback module:api/CommandesApi~organizationsOrganizationSlugFormsFormTypeFormSlugItemsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtenir une liste d'articles vendus dans un formulaire
     * <br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>
     * @param {String} organizationSlug The organization slug
     * @param {String} formSlug The form slug
     * @param {module:model/HelloAssoApiV5ModelsEnumsFormType} formType The form type CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop
     * @param {Object} opts Optional parameters
     * @param {Date} [from] First Date Filter
     * @param {Date} [to] End Date Filter
     * @param {String} [userSearchKey] Filter results on user or payer first name, last name or email
     * @param {Number} [pageIndex = 1)] The page of results to retrieve
     * @param {Number} [pageSize = 20)] The number of items per page
     * @param {String} [continuationToken] Continuation Token from which we wish to retrieve results
     * @param {Array.<module:model/HelloAssoApiV5ModelsEnumsTierType>} [tierTypes] The type of tiers
     * @param {Array.<module:model/HelloAssoApiV5ModelsEnumsItemState>} [itemStates] The item states  Available values: * `Processed` - The item is paid and is valid * `Registered` - The item has been registered manually by the organization and is valid * `Unknown` * `Canceled` - The item has been canceled, and is no longer valid
     * @param {String} [tierName] The name of a tier
     * @param {Boolean} [withDetails = false)] Set to true to return CustomFields and Options
     * @param {module:model/HelloAssoApiV5ModelsEnumsSortOrder} [sortOrder] Sort forms items by ascending or descending order. Default is descending
     * @param {module:model/HelloAssoApiV5ModelsEnumsSortField} [sortField] Sort forms items by a specific field (Date or UpdateDate). Default is date
     * @param {Boolean} [withCount = true)] Whether the pagination should include totalCount and totalPages.
     * @param {module:api/CommandesApi~organizationsOrganizationSlugFormsFormTypeFormSlugItemsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    organizationsOrganizationSlugFormsFormTypeFormSlugItemsGet(organizationSlug, formSlug, formType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationSlug' is set
      if (organizationSlug === undefined || organizationSlug === null) {
        throw new Error("Missing the required parameter 'organizationSlug' when calling organizationsOrganizationSlugFormsFormTypeFormSlugItemsGet");
      }
      // verify the required parameter 'formSlug' is set
      if (formSlug === undefined || formSlug === null) {
        throw new Error("Missing the required parameter 'formSlug' when calling organizationsOrganizationSlugFormsFormTypeFormSlugItemsGet");
      }
      // verify the required parameter 'formType' is set
      if (formType === undefined || formType === null) {
        throw new Error("Missing the required parameter 'formType' when calling organizationsOrganizationSlugFormsFormTypeFormSlugItemsGet");
      }

      let pathParams = {
        'organizationSlug': organizationSlug,
        'formSlug': formSlug,
        'formType': formType
      };
      let queryParams = {
        'from': opts['from'],
        'to': opts['to'],
        'userSearchKey': opts['userSearchKey'],
        'pageIndex': opts['pageIndex'],
        'pageSize': opts['pageSize'],
        'continuationToken': opts['continuationToken'],
        'tierTypes': this.apiClient.buildCollectionParam(opts['tierTypes'], 'multi'),
        'itemStates': this.apiClient.buildCollectionParam(opts['itemStates'], 'multi'),
        'tierName': opts['tierName'],
        'withDetails': opts['withDetails'],
        'sortOrder': opts['sortOrder'],
        'sortField': opts['sortField'],
        'withCount': opts['withCount']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'text/csv'];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/{organizationSlug}/forms/{formType}/{formSlug}/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the organizationsOrganizationSlugFormsFormTypeFormSlugOrdersGet operation.
     * @callback module:api/CommandesApi~organizationsOrganizationSlugFormsFormTypeFormSlugOrdersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResultsWithPaginationModelOrder} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtenir les commandes d'un formulaire
     * <br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>
     * @param {String} organizationSlug The organization slug
     * @param {String} formSlug The form slug
     * @param {module:model/HelloAssoApiV5ModelsEnumsFormType} formType The form type CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop
     * @param {Object} opts Optional parameters
     * @param {Date} [from] First Date Filter
     * @param {Date} [to] End Date Filter
     * @param {String} [userSearchKey] Filter results on user or payer first name, last name or email
     * @param {Number} [pageIndex = 1)] The page of results to retrieve
     * @param {Number} [pageSize = 20)] The number of items per page
     * @param {String} [continuationToken] Continuation Token from which we wish to retrieve results
     * @param {Boolean} [withDetails = false)] Set to true to return CustomFields
     * @param {module:model/HelloAssoApiV5ModelsEnumsSortOrder} [sortOrder] Sort forms orders by ascending or descending order. Default is descending
     * @param {Boolean} [withCount = true)] Whether the pagination should include totalCount and totalPages.
     * @param {module:api/CommandesApi~organizationsOrganizationSlugFormsFormTypeFormSlugOrdersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResultsWithPaginationModelOrder}
     */
    organizationsOrganizationSlugFormsFormTypeFormSlugOrdersGet(organizationSlug, formSlug, formType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationSlug' is set
      if (organizationSlug === undefined || organizationSlug === null) {
        throw new Error("Missing the required parameter 'organizationSlug' when calling organizationsOrganizationSlugFormsFormTypeFormSlugOrdersGet");
      }
      // verify the required parameter 'formSlug' is set
      if (formSlug === undefined || formSlug === null) {
        throw new Error("Missing the required parameter 'formSlug' when calling organizationsOrganizationSlugFormsFormTypeFormSlugOrdersGet");
      }
      // verify the required parameter 'formType' is set
      if (formType === undefined || formType === null) {
        throw new Error("Missing the required parameter 'formType' when calling organizationsOrganizationSlugFormsFormTypeFormSlugOrdersGet");
      }

      let pathParams = {
        'organizationSlug': organizationSlug,
        'formSlug': formSlug,
        'formType': formType
      };
      let queryParams = {
        'from': opts['from'],
        'to': opts['to'],
        'userSearchKey': opts['userSearchKey'],
        'pageIndex': opts['pageIndex'],
        'pageSize': opts['pageSize'],
        'continuationToken': opts['continuationToken'],
        'withDetails': opts['withDetails'],
        'sortOrder': opts['sortOrder'],
        'withCount': opts['withCount']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ResultsWithPaginationModelOrder;
      return this.apiClient.callApi(
        '/organizations/{organizationSlug}/forms/{formType}/{formSlug}/orders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the organizationsOrganizationSlugItemsGet operation.
     * @callback module:api/CommandesApi~organizationsOrganizationSlugItemsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtenir une liste d'articles vendus par une organisation
     * <br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>
     * @param {String} organizationSlug The organization slug
     * @param {Object} opts Optional parameters
     * @param {Date} [from] First Date Filter
     * @param {Date} [to] End Date Filter
     * @param {String} [userSearchKey] Filter results on user or payer first name, last name or email
     * @param {Number} [pageIndex = 1)] The page of results to retrieve
     * @param {Number} [pageSize = 20)] The number of items per page
     * @param {String} [continuationToken] Continuation Token from which we wish to retrieve results
     * @param {Array.<module:model/HelloAssoApiV5ModelsEnumsTierType>} [tierTypes] The type of tiers Donation, Payment, Registration, Membership, MonthlyDonation, MonthlyPayment, OfflineDonation, Contribution, Bonus
     * @param {Array.<module:model/HelloAssoApiV5ModelsEnumsItemState>} [itemStates] The item states  Available values: * `Processed` - The item is paid and is valid * `Registered` - The item has been registered manually by the organization and is valid * `Unknown` * `Canceled` - The item has been canceled, and is no longer valid
     * @param {String} [tierName] The name of a tier
     * @param {Boolean} [withDetails = false)] Set to true to return CustomFields and Options
     * @param {module:model/HelloAssoApiV5ModelsEnumsSortOrder} [sortOrder] Sort organizations items by ascending or descending order. Default is descending
     * @param {module:model/HelloAssoApiV5ModelsEnumsSortField} [sortField] Sort organizations items by a specific field (Date or UpdateDate). Default is date
     * @param {Boolean} [withCount = true)] Whether the pagination should include totalCount and totalPages.
     * @param {module:api/CommandesApi~organizationsOrganizationSlugItemsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    organizationsOrganizationSlugItemsGet(organizationSlug, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationSlug' is set
      if (organizationSlug === undefined || organizationSlug === null) {
        throw new Error("Missing the required parameter 'organizationSlug' when calling organizationsOrganizationSlugItemsGet");
      }

      let pathParams = {
        'organizationSlug': organizationSlug
      };
      let queryParams = {
        'from': opts['from'],
        'to': opts['to'],
        'userSearchKey': opts['userSearchKey'],
        'pageIndex': opts['pageIndex'],
        'pageSize': opts['pageSize'],
        'continuationToken': opts['continuationToken'],
        'tierTypes': this.apiClient.buildCollectionParam(opts['tierTypes'], 'multi'),
        'itemStates': this.apiClient.buildCollectionParam(opts['itemStates'], 'multi'),
        'tierName': opts['tierName'],
        'withDetails': opts['withDetails'],
        'sortOrder': opts['sortOrder'],
        'sortField': opts['sortField'],
        'withCount': opts['withCount']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'text/csv'];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/{organizationSlug}/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the organizationsOrganizationSlugOrdersGet operation.
     * @callback module:api/CommandesApi~organizationsOrganizationSlugOrdersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResultsWithPaginationModelOrder} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtenir les commandes d'une organisation
     * <br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>
     * @param {String} organizationSlug The organization slug
     * @param {Object} opts Optional parameters
     * @param {Date} [from] First Date Filter
     * @param {Date} [to] End Date Filter
     * @param {String} [userSearchKey] Filter results on user or payer first name, last name or email
     * @param {Number} [pageIndex = 1)] The page of results to retrieve
     * @param {Number} [pageSize = 20)] The number of items per page
     * @param {String} [continuationToken] Continuation Token from which we wish to retrieve results
     * @param {Array.<module:model/HelloAssoApiV5ModelsEnumsFormType>} [formTypes] The type of the form CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop
     * @param {Boolean} [withDetails = false)] Set to true to return CustomFields
     * @param {module:model/HelloAssoApiV5ModelsEnumsSortOrder} [sortOrder] Sort organizations orders by ascending or descending order. Default is descending
     * @param {Boolean} [withCount = true)] Whether the pagination should include totalCount and totalPages.
     * @param {module:api/CommandesApi~organizationsOrganizationSlugOrdersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResultsWithPaginationModelOrder}
     */
    organizationsOrganizationSlugOrdersGet(organizationSlug, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationSlug' is set
      if (organizationSlug === undefined || organizationSlug === null) {
        throw new Error("Missing the required parameter 'organizationSlug' when calling organizationsOrganizationSlugOrdersGet");
      }

      let pathParams = {
        'organizationSlug': organizationSlug
      };
      let queryParams = {
        'from': opts['from'],
        'to': opts['to'],
        'userSearchKey': opts['userSearchKey'],
        'pageIndex': opts['pageIndex'],
        'pageSize': opts['pageSize'],
        'continuationToken': opts['continuationToken'],
        'formTypes': this.apiClient.buildCollectionParam(opts['formTypes'], 'multi'),
        'withDetails': opts['withDetails'],
        'sortOrder': opts['sortOrder'],
        'withCount': opts['withCount']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ResultsWithPaginationModelOrder;
      return this.apiClient.callApi(
        '/organizations/{organizationSlug}/orders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
