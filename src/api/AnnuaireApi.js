/**
 * HelloAsso API
 * HelloAsso auto-generated SDK
 *
 * The version of the OpenAPI document: public
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HelloAssoApiV5ModelsDirectoryListFormsRequest from '../model/HelloAssoApiV5ModelsDirectoryListFormsRequest';
import HelloAssoApiV5ModelsDirectoryListOrganizationsRequest from '../model/HelloAssoApiV5ModelsDirectoryListOrganizationsRequest';
import ResultsWithPaginationModelSynchronizableFormModel from '../model/ResultsWithPaginationModelSynchronizableFormModel';
import ResultsWithPaginationModelSynchronizableOrganizationModel from '../model/ResultsWithPaginationModelSynchronizableOrganizationModel';

/**
* Annuaire service.
* @module api/AnnuaireApi
* @version public
*/
export default class AnnuaireApi {

    /**
    * Constructs a new AnnuaireApi. 
    * @alias module:api/AnnuaireApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the directoryFormsPost operation.
     * @callback module:api/AnnuaireApi~directoryFormsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResultsWithPaginationModelSynchronizableFormModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Récupérer les formulaires
     * Permet de récupérer une liste de tous les formulaires visibles correspondant à tous les filtres de l'annuaire jusqu'à ce qu'il soit synchronisé (en utilisant le continuationToken). Si aucun filtre n'est spécifié, aucun filtre n'est appliqué. Les résultats sont classés par date de mise à jour de la visibilité API en ordre croissant. Une fois la liste synchronisée, seuls les formulaires avec une date de mise à jour de la visibilité API supérieure à la dernière forme envoyée sont retournés (toujours en utilisant le continuationToken). Cela concerne les nouveaux formulaires à insérer (souhaitant apparaître de l'annuaire) ainsi que les anciens à supprimer (ne souhaitant plus apparaître dans l'annuaire). Le nombre total de résultats (ou de pages) n'est pas récupérable, donc les informations de pagination retournées indiqueront toujours -1.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> FormOpenDirectory<br/><br/>
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize = 20)] The number of items per page
     * @param {String} [continuationToken] Continuation Token from which we wish to retrieve results
     * @param {module:model/HelloAssoApiV5ModelsDirectoryListFormsRequest} [helloAssoApiV5ModelsDirectoryListFormsRequest] Body which contains the filters to apply
     * @param {module:api/AnnuaireApi~directoryFormsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResultsWithPaginationModelSynchronizableFormModel}
     */
    directoryFormsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['helloAssoApiV5ModelsDirectoryListFormsRequest'];

      let pathParams = {
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'continuationToken': opts['continuationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ResultsWithPaginationModelSynchronizableFormModel;
      return this.apiClient.callApi(
        '/directory/forms', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the directoryOrganizationsPost operation.
     * @callback module:api/AnnuaireApi~directoryOrganizationsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResultsWithPaginationModelSynchronizableOrganizationModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Récupérer les organisations
     * Permet de récupérer une liste de toutes les organisations visibles correspondant à tous les filtres de l'annuaire jusqu'à ce qu'il soit synchronisé (en utilisant le continuationToken). Si aucun filtre n'est spécifié, aucun filtre n'est appliqué. Les résultats sont classés par date de mise à jour de la visibilité API en ordre croissant. Une fois la liste synchronisée, seules les organisations avec une date de mise à jour de la visibilité API supérieure à la dernière organisation envoyée sont retournées (toujours en utilisant le continuationToken). Cela concerne les nouvelles organisations à insérer (souhaitant apparaître dans l'annuaire) ainsi que les anciennes à supprimer (ne souhaitant plus apparaître dans l'annuaire). Le nombre total de résultats (ou de pages) n'est pas récupérable, donc les informations de pagination retournées indiqueront toujours -1.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> OrganizationOpenDirectory<br/><br/>
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize = 20)] The number of items per page
     * @param {String} [continuationToken] Continuation Token from which we wish to retrieve results
     * @param {module:model/HelloAssoApiV5ModelsDirectoryListOrganizationsRequest} [helloAssoApiV5ModelsDirectoryListOrganizationsRequest] Body which contains the filters to apply
     * @param {module:api/AnnuaireApi~directoryOrganizationsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResultsWithPaginationModelSynchronizableOrganizationModel}
     */
    directoryOrganizationsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['helloAssoApiV5ModelsDirectoryListOrganizationsRequest'];

      let pathParams = {
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'continuationToken': opts['continuationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ResultsWithPaginationModelSynchronizableOrganizationModel;
      return this.apiClient.callApi(
        '/directory/organizations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
