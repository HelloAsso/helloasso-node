/**
 * HelloAsso API
 * HelloAsso auto-generated SDK
 *
 * The version of the OpenAPI document: public
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HelloAssoApiV5ModelsOrganizationLegalInformationsUpdateOrganizationLegalInformationConfigurationBody from '../model/HelloAssoApiV5ModelsOrganizationLegalInformationsUpdateOrganizationLegalInformationConfigurationBody';

/**
* OrganizationLegalInformations service.
* @module api/OrganizationLegalInformationsApi
* @version public
*/
export default class OrganizationLegalInformationsApi {

    /**
    * Constructs a new OrganizationLegalInformationsApi. 
    * @alias module:api/OrganizationLegalInformationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the organizationsLegalInformationsOrganizationSlugConfigurationPut operation.
     * @callback module:api/OrganizationLegalInformationsApi~organizationsLegalInformationsOrganizationSlugConfigurationPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> OrganizationAdministration<br/><br/>
     * @param {String} organizationSlug 
     * @param {Object} opts Optional parameters
     * @param {module:model/HelloAssoApiV5ModelsOrganizationLegalInformationsUpdateOrganizationLegalInformationConfigurationBody} [helloAssoApiV5ModelsOrganizationLegalInformationsUpdateOrganizationLegalInformationConfigurationBody] 
     * @param {module:api/OrganizationLegalInformationsApi~organizationsLegalInformationsOrganizationSlugConfigurationPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    organizationsLegalInformationsOrganizationSlugConfigurationPut(organizationSlug, opts, callback) {
      opts = opts || {};
      let postBody = opts['helloAssoApiV5ModelsOrganizationLegalInformationsUpdateOrganizationLegalInformationConfigurationBody'];
      // verify the required parameter 'organizationSlug' is set
      if (organizationSlug === undefined || organizationSlug === null) {
        throw new Error("Missing the required parameter 'organizationSlug' when calling organizationsLegalInformationsOrganizationSlugConfigurationPut");
      }

      let pathParams = {
        'organizationSlug': organizationSlug
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/legal-informations/{organizationSlug}/configuration', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
