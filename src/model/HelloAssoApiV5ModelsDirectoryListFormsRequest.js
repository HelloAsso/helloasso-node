/**
 * HelloAsso API
 * HelloAsso auto-generated SDK
 *
 * The version of the OpenAPI document: public
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HelloAssoApiV5ModelsEnumsFormType from './HelloAssoApiV5ModelsEnumsFormType';

/**
 * The HelloAssoApiV5ModelsDirectoryListFormsRequest model module.
 * @module model/HelloAssoApiV5ModelsDirectoryListFormsRequest
 * @version public
 */
class HelloAssoApiV5ModelsDirectoryListFormsRequest {
    /**
     * Constructs a new <code>HelloAssoApiV5ModelsDirectoryListFormsRequest</code>.
     * @alias module:model/HelloAssoApiV5ModelsDirectoryListFormsRequest
     */
    constructor() { 
        
        HelloAssoApiV5ModelsDirectoryListFormsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HelloAssoApiV5ModelsDirectoryListFormsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HelloAssoApiV5ModelsDirectoryListFormsRequest} obj Optional instance to populate.
     * @return {module:model/HelloAssoApiV5ModelsDirectoryListFormsRequest} The populated <code>HelloAssoApiV5ModelsDirectoryListFormsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HelloAssoApiV5ModelsDirectoryListFormsRequest();

            if (data.hasOwnProperty('formName')) {
                obj['formName'] = ApiClient.convertToType(data['formName'], 'String');
            }
            if (data.hasOwnProperty('formDescription')) {
                obj['formDescription'] = ApiClient.convertToType(data['formDescription'], 'String');
            }
            if (data.hasOwnProperty('formZipCodes')) {
                obj['formZipCodes'] = ApiClient.convertToType(data['formZipCodes'], ['String']);
            }
            if (data.hasOwnProperty('formCities')) {
                obj['formCities'] = ApiClient.convertToType(data['formCities'], ['String']);
            }
            if (data.hasOwnProperty('formRegions')) {
                obj['formRegions'] = ApiClient.convertToType(data['formRegions'], ['String']);
            }
            if (data.hasOwnProperty('formDepartments')) {
                obj['formDepartments'] = ApiClient.convertToType(data['formDepartments'], ['String']);
            }
            if (data.hasOwnProperty('formCountries')) {
                obj['formCountries'] = ApiClient.convertToType(data['formCountries'], ['String']);
            }
            if (data.hasOwnProperty('formTypes')) {
                obj['formTypes'] = ApiClient.convertToType(data['formTypes'], [HelloAssoApiV5ModelsEnumsFormType]);
            }
            if (data.hasOwnProperty('formActivityType')) {
                obj['formActivityType'] = ApiClient.convertToType(data['formActivityType'], ['String']);
            }
            if (data.hasOwnProperty('formPublicationStartDateMin')) {
                obj['formPublicationStartDateMin'] = ApiClient.convertToType(data['formPublicationStartDateMin'], 'Date');
            }
            if (data.hasOwnProperty('formPublicationStartDateMax')) {
                obj['formPublicationStartDateMax'] = ApiClient.convertToType(data['formPublicationStartDateMax'], 'Date');
            }
            if (data.hasOwnProperty('formStartDateMin')) {
                obj['formStartDateMin'] = ApiClient.convertToType(data['formStartDateMin'], 'Date');
            }
            if (data.hasOwnProperty('formStartDateMax')) {
                obj['formStartDateMax'] = ApiClient.convertToType(data['formStartDateMax'], 'Date');
            }
            if (data.hasOwnProperty('formEndDateMax')) {
                obj['formEndDateMax'] = ApiClient.convertToType(data['formEndDateMax'], 'Date');
            }
            if (data.hasOwnProperty('formEndDateMin')) {
                obj['formEndDateMin'] = ApiClient.convertToType(data['formEndDateMin'], 'Date');
            }
            if (data.hasOwnProperty('formIsFree')) {
                obj['formIsFree'] = ApiClient.convertToType(data['formIsFree'], 'Boolean');
            }
            if (data.hasOwnProperty('formHasRemainingEntries')) {
                obj['formHasRemainingEntries'] = ApiClient.convertToType(data['formHasRemainingEntries'], 'Boolean');
            }
            if (data.hasOwnProperty('formInternalTags')) {
                obj['formInternalTags'] = ApiClient.convertToType(data['formInternalTags'], ['String']);
            }
            if (data.hasOwnProperty('formPublicTags')) {
                obj['formPublicTags'] = ApiClient.convertToType(data['formPublicTags'], ['String']);
            }
            if (data.hasOwnProperty('organizationName')) {
                obj['organizationName'] = ApiClient.convertToType(data['organizationName'], 'String');
            }
            if (data.hasOwnProperty('organizationDescription')) {
                obj['organizationDescription'] = ApiClient.convertToType(data['organizationDescription'], 'String');
            }
            if (data.hasOwnProperty('organizationCategories')) {
                obj['organizationCategories'] = ApiClient.convertToType(data['organizationCategories'], ['String']);
            }
            if (data.hasOwnProperty('organizationTypes')) {
                obj['organizationTypes'] = ApiClient.convertToType(data['organizationTypes'], ['String']);
            }
            if (data.hasOwnProperty('organizationZipCodes')) {
                obj['organizationZipCodes'] = ApiClient.convertToType(data['organizationZipCodes'], ['String']);
            }
            if (data.hasOwnProperty('organizationCities')) {
                obj['organizationCities'] = ApiClient.convertToType(data['organizationCities'], ['String']);
            }
            if (data.hasOwnProperty('organizationRegions')) {
                obj['organizationRegions'] = ApiClient.convertToType(data['organizationRegions'], ['String']);
            }
            if (data.hasOwnProperty('organizationDepartments')) {
                obj['organizationDepartments'] = ApiClient.convertToType(data['organizationDepartments'], ['String']);
            }
            if (data.hasOwnProperty('organizationFiscalReceiptEligibility')) {
                obj['organizationFiscalReceiptEligibility'] = ApiClient.convertToType(data['organizationFiscalReceiptEligibility'], 'Boolean');
            }
            if (data.hasOwnProperty('organizationLinkedPartners')) {
                obj['organizationLinkedPartners'] = ApiClient.convertToType(data['organizationLinkedPartners'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HelloAssoApiV5ModelsDirectoryListFormsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HelloAssoApiV5ModelsDirectoryListFormsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['formName'] && !(typeof data['formName'] === 'string' || data['formName'] instanceof String)) {
            throw new Error("Expected the field `formName` to be a primitive type in the JSON string but got " + data['formName']);
        }
        // ensure the json data is a string
        if (data['formDescription'] && !(typeof data['formDescription'] === 'string' || data['formDescription'] instanceof String)) {
            throw new Error("Expected the field `formDescription` to be a primitive type in the JSON string but got " + data['formDescription']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['formZipCodes'])) {
            throw new Error("Expected the field `formZipCodes` to be an array in the JSON data but got " + data['formZipCodes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['formCities'])) {
            throw new Error("Expected the field `formCities` to be an array in the JSON data but got " + data['formCities']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['formRegions'])) {
            throw new Error("Expected the field `formRegions` to be an array in the JSON data but got " + data['formRegions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['formDepartments'])) {
            throw new Error("Expected the field `formDepartments` to be an array in the JSON data but got " + data['formDepartments']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['formCountries'])) {
            throw new Error("Expected the field `formCountries` to be an array in the JSON data but got " + data['formCountries']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['formTypes'])) {
            throw new Error("Expected the field `formTypes` to be an array in the JSON data but got " + data['formTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['formActivityType'])) {
            throw new Error("Expected the field `formActivityType` to be an array in the JSON data but got " + data['formActivityType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['formInternalTags'])) {
            throw new Error("Expected the field `formInternalTags` to be an array in the JSON data but got " + data['formInternalTags']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['formPublicTags'])) {
            throw new Error("Expected the field `formPublicTags` to be an array in the JSON data but got " + data['formPublicTags']);
        }
        // ensure the json data is a string
        if (data['organizationName'] && !(typeof data['organizationName'] === 'string' || data['organizationName'] instanceof String)) {
            throw new Error("Expected the field `organizationName` to be a primitive type in the JSON string but got " + data['organizationName']);
        }
        // ensure the json data is a string
        if (data['organizationDescription'] && !(typeof data['organizationDescription'] === 'string' || data['organizationDescription'] instanceof String)) {
            throw new Error("Expected the field `organizationDescription` to be a primitive type in the JSON string but got " + data['organizationDescription']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['organizationCategories'])) {
            throw new Error("Expected the field `organizationCategories` to be an array in the JSON data but got " + data['organizationCategories']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['organizationTypes'])) {
            throw new Error("Expected the field `organizationTypes` to be an array in the JSON data but got " + data['organizationTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['organizationZipCodes'])) {
            throw new Error("Expected the field `organizationZipCodes` to be an array in the JSON data but got " + data['organizationZipCodes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['organizationCities'])) {
            throw new Error("Expected the field `organizationCities` to be an array in the JSON data but got " + data['organizationCities']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['organizationRegions'])) {
            throw new Error("Expected the field `organizationRegions` to be an array in the JSON data but got " + data['organizationRegions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['organizationDepartments'])) {
            throw new Error("Expected the field `organizationDepartments` to be an array in the JSON data but got " + data['organizationDepartments']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['organizationLinkedPartners'])) {
            throw new Error("Expected the field `organizationLinkedPartners` to be an array in the JSON data but got " + data['organizationLinkedPartners']);
        }

        return true;
    }


}



/**
 * Textual search for form name
 * @member {String} formName
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formName'] = undefined;

/**
 * Textual search for form description
 * @member {String} formDescription
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formDescription'] = undefined;

/**
 * The zip codes where the forms are located
 * @member {Array.<String>} formZipCodes
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formZipCodes'] = undefined;

/**
 * The cities where the forms are located
 * @member {Array.<String>} formCities
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formCities'] = undefined;

/**
 * The regions where the forms are located
 * @member {Array.<String>} formRegions
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formRegions'] = undefined;

/**
 * The departments where the forms are located
 * @member {Array.<String>} formDepartments
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formDepartments'] = undefined;

/**
 * The countries where the forms are located
 * @member {Array.<String>} formCountries
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formCountries'] = undefined;

/**
 * The form types : CrowdFunding, Membership, Event, Donation, PaymentForm ...
 * @member {Array.<module:model/HelloAssoApiV5ModelsEnumsFormType>} formTypes
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formTypes'] = undefined;

/**
 * The Activity Type of the form
 * @member {Array.<String>} formActivityType
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formActivityType'] = undefined;

/**
 * The inclusive minimum publication date of the forms, format \"yyyy-MM-ddTHH:mm:ss.fffK\"
 * @member {Date} formPublicationStartDateMin
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formPublicationStartDateMin'] = undefined;

/**
 * The exclusive maximum publication date of the forms, format \"yyyy-MM-ddTHH:mm:ss.fffK\"
 * @member {Date} formPublicationStartDateMax
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formPublicationStartDateMax'] = undefined;

/**
 * The inclusive minimum start date of the forms, format \"yyyy-MM-ddTHH:mm:ss.fffK\"
 * @member {Date} formStartDateMin
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formStartDateMin'] = undefined;

/**
 * The exclusive maximum start date of the forms, format \"yyyy-MM-ddTHH:mm:ss.fffK\"
 * @member {Date} formStartDateMax
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formStartDateMax'] = undefined;

/**
 * The exclusive maximum end date of the forms, format \"yyyy-MM-ddTHH:mm:ss.fffK\"
 * @member {Date} formEndDateMax
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formEndDateMax'] = undefined;

/**
 * The inclusive minimum end date of the forms, format \"yyyy-MM-ddTHH:mm:ss.fffK\"
 * @member {Date} formEndDateMin
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formEndDateMin'] = undefined;

/**
 * Allow only free forms if true
 * @member {Boolean} formIsFree
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formIsFree'] = undefined;

/**
 * Allow only forms with remaning entries if true
 * @member {Boolean} formHasRemainingEntries
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formHasRemainingEntries'] = undefined;

/**
 * Allow only forms with internal tags  this filter is for special operations only
 * @member {Array.<String>} formInternalTags
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formInternalTags'] = undefined;

/**
 * Allow only forms with public tags
 * @member {Array.<String>} formPublicTags
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['formPublicTags'] = undefined;

/**
 * Textual search for organization name
 * @member {String} organizationName
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['organizationName'] = undefined;

/**
 * Textual search for organization description
 * @member {String} organizationDescription
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['organizationDescription'] = undefined;

/**
 * The categories of the forms
 * @member {Array.<String>} organizationCategories
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['organizationCategories'] = undefined;

/**
 * The organization types
 * @member {Array.<String>} organizationTypes
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['organizationTypes'] = undefined;

/**
 * The zip codes where the organizations are located
 * @member {Array.<String>} organizationZipCodes
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['organizationZipCodes'] = undefined;

/**
 * The cities where the organizations are located
 * @member {Array.<String>} organizationCities
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['organizationCities'] = undefined;

/**
 * The regions where the organizations are located
 * @member {Array.<String>} organizationRegions
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['organizationRegions'] = undefined;

/**
 * The departments where the organizations are located
 * @member {Array.<String>} organizationDepartments
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['organizationDepartments'] = undefined;

/**
 * Allow only organization with a fiscal receipt eligibility
 * @member {Boolean} organizationFiscalReceiptEligibility
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['organizationFiscalReceiptEligibility'] = undefined;

/**
 * Organization linked partners
 * @member {Array.<String>} organizationLinkedPartners
 */
HelloAssoApiV5ModelsDirectoryListFormsRequest.prototype['organizationLinkedPartners'] = undefined;






export default HelloAssoApiV5ModelsDirectoryListFormsRequest;

